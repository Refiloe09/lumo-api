// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int        @id @default(autoincrement())
  clerkUserId String @unique
  email String @unique
  services Services[]
  orders Orders[]
  reviews Reviews[]
  messagesSent Message[] @relation("sentMessages")
  messagesReceived Message[] @relation("receivedMessages")
  
}

model Services {
  id Int @id @default(autoincrement())
  title String 
  description String
  category String
  subcategory String @default("Sales Strategy Development")
  deliveryTime Int
  revisions Int
  features String[]
  price Int
  shortDesc String
  createdAt DateTime @default(now())
  images String[]
  createdBy User @relation(fields: [userId], references: [id])
  userId Int
  orders Orders[]
  reviews Reviews[]
  @@index([title])
  @@index([description])
  @@index([category])
  @@index([subcategory])
  @@index([shortDesc])
}


model Orders {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  buyer User @relation(fields: [buyerId],references: [id])
  buyerId Int
  isCompleted Boolean @default(false)
  services Services @relation(fields:[serviceId],references: [id])
  serviceId Int
  price Int
  contactEmail  String?  // Add these fields
  contactPhone  String?
  notes         String?
  messages Message[]
}

model Reviews {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  rating Int
  reviewText String?
  services Services @relation(fields:[serviceId],references: [id])
  serviceId Int
  reviewer User @relation(fields: [reviewerId],references: [id])
  reviewerId Int
} 

model Message {
  id Int @id @default(autoincrement())
  text String
  createdAt DateTime @default(now())
  isRead Boolean @default(false)
  sender User @relation("sentMessages", fields: [senderId], references: [id])
  senderId Int
  recipient User @relation("receivedMessages", fields: [recipientId], references: [id])
  recipientId Int
  order Orders @relation(fields: [orderId], references: [id])
  orderId Int
}

